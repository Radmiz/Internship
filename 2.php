<?php
//Функция заменяет второе вхождение подстроки ($b) в строку ($a) инвертированной строкой ($b), если этих вхождений >= 2.
function convertString(&$a,$b)
{
	$pos = 0;
	$i = 0; //Счетчик вхождений строки

	$i = substr_count($a,$b);

  	if ($i >= 2) {
  		$pos = strpos($a,$b); //Найдем сначала позицию первого вхождения
  		$pos = strpos($a, $b, $pos+1); //Найдем позицию второго вхождения используя позицию первого вхождения как стартовую + 1, иначе функция найдет то же первое вхождение

  		$a = substr_replace($a, strrev($b), $pos, strlen($b));  //Последним параметром идет длинна замены, без него строка обрежется
  	}
}

//Функция сортирует двумерный массив по значениям ключей ($b) вложенного массива. По возрастанию
function mySortForKey(&$a,$b)
{
	$temp = array();
	$g = count($a)-1; //Счетчик для количества сравниваемых элементов

	if (!array_key_exists($b, $a[0])) {
		throw new Exception("Ключ '$b' отсутствует в массиве с индексом (0)");
	}

	//Сортировать будем Пузырьком
	for ($i=1; $i < count($a); $i++) {

		for ($j=0; $j < $g; $j++) {
			if (!array_key_exists($b, $a[$j+1])) {
				$j++;
				throw new Exception("Ключ '$b' отсутствует в массиве с индексом ($j)");
			}

			if ($a[$j][$b] > $a[$j+1][$b]) {

				$temp = $a[$j];
				$a[$j] = $a[$j+1];
				$a[$j+1] = $temp;

			}

		}

		$g--; //После прохода по циклу, наибольший элемент будет находится вконце массива, поэтому, чтобы уменьшить время сортировки, будем уменьшать количество проверяемых елементов на 1. Таким образом наибольшие элементы проверятся уже не будут
	}
}
